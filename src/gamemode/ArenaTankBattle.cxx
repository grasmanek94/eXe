/*
	Copyright (c) 2014 - 2015 Rafa³ "Gamer_Z" Grasman
		* See LICENSE.md in root directory for license
		* Written by Rafa³ Grasman <grasmanek94@gmail.com>
		* Development Start Month-Year: October-2014

	________________________________________________________________
	Purpose of this file

	________________________________________________________________	
	Notes

	________________________________________________________________
	Dependencies

	________________________________________________________________
	Project Contributors
		Tom 'IceCube' Hewlett
		Mariusz 'C2A1' K.
		Mateusz 'eider' Cichoñ
*/
#include "GameMode.hxx"

using namespace Zabawy;
namespace TankBattle
{
	class Arena : public Base
	{
	public:
		std::vector<SObject> ArenaObjects;

		std::vector<SSpawnPoint> ArenaSpawns;

		Arena() :
			Base(L_games_ArenaTankBattle_name, "/ztb"),
			ArenaSpawns({
				{ 4387.7998000, 2981.3999000, 495.8999900+0.3, 90.2500000 }, //Rhino
				{ 4280.0000000, 3204.3000000, 495.8999900+0.3, 180.0000000 }, //Rhino
				{ 4390.0000000, 3201.2002000, 495.8999900+0.3, 126.2490000 }, //Rhino
				{ 4387.9004000, 3049.7998000, 495.8999900+0.3, 90.2470000 }, //Rhino
				{ 4388.0000000, 3014.5000000, 495.8999900+0.3, 90.2470000 }, //Rhino
				{ 4373.5000000, 2964.8999000, 495.8999900+0.3, 359.2470000 }, //Rhino
				{ 4275.0000000, 2975.5000000, 495.8999900+0.3, 359.2420000 }, //Rhino
				{ 4328.1006000, 2965.2998000, 495.8999900+0.3, 359.2420000 }, //Rhino
				{ 4305.2002000, 3067.0000000, 495.8999900+0.3, 88.9920000 }, //Rhino
				{ 4360.2998000, 3139.7000000, 495.8999900+0.3, 0.7390000 }, //Rhino
				{ 4334.7002000, 3178.5000000, 495.8999900+0.3, 88.9890000 }, //Rhino
				{ 4342.7998000, 3113.7998000, 495.8999900+0.3, 88.9890000 }, //Rhino
				{ 4326.7998000, 3050.8000000, 495.8999900+0.3, 269.7360000 }, //Rhino
				{ 4369.5000000, 3128.6006000, 495.8999900+0.3, 269.7310000 }, //Rhino
				{ 4295.2002000, 3100.5000000, 495.8999900+0.3, 269.7310000 }, //Rhino
				{ 4300.5000000, 3154.7998000, 495.8999900+0.3, 269.7310000 }, //Rhino
				{ 4349.0000000, 3196.2000000, 495.8999900+0.3, 269.7310000 }, //Rhino
				{ 4289.2998000, 3121.2000000, 495.8999900+0.3, 269.7310000 }, //Rhino
				{ 4392.0000000, 3165.1001000, 495.8999900+0.3, 180.7310000 }, //Rhino
				{ 4301.8999000, 3009.6001000, 495.8999900+0.3, 180.7310000 }, //Rhino
				{ 0.0f, 0.0f, 0.0f, 0.0f }
			}),
			ArenaObjects({
				{ 8411, 4303.0000000, 3046.2000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 0
				{ 8411, 4303.0000000, 3020.8999000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 1
				{ 8411, 4303.0000000, 2995.5000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 2
				{ 8411, 4303.0000000, 2970.2000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 3
				{ 8411, 4303.0000000, 3071.3999000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 4
				{ 8411, 4365.3999000, 3071.3999000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 5
				{ 8411, 4365.2998000, 3046.0000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 6
				{ 8411, 4365.2002000, 3020.8000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 7
				{ 8411, 4365.2998000, 2995.3999000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 8
				{ 8411, 4365.3999000, 2970.2000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 9
				{ 8411, 4365.3999000, 3096.8000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 10
				{ 8411, 4303.0000000, 3096.8000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 11
				{ 8411, 4303.0000000, 3122.2000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 12
				{ 8411, 4365.5000000, 3122.2000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 13
				{ 8411, 4365.3999000, 3147.3999000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 14
				{ 8411, 4303.0000000, 3147.3999000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 15
				{ 8411, 4303.0000000, 3172.6001000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 16
				{ 8411, 4365.3999000, 3172.6001000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 17
				{ 8411, 4365.3999000, 3197.8000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 18
				{ 8411, 4302.8999000, 3197.7000000, 429.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 19
				{ 7561, 4262.3999000, 2984.8000000, 500.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 20
				{ 7561, 4262.2998000, 3039.7000000, 500.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 21
				{ 7561, 4262.2998000, 3094.3999000, 500.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 22
				{ 7561, 4262.2998000, 3149.1001000, 500.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 23
				{ 7561, 4262.2998000, 3204.0000000, 500.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 24
				{ 7561, 4299.5000000, 3219.2000000, 500.7999900, 0.0000000, 0.0000000, 269.5000000 }, //Object number 25
				{ 7561, 4354.2998000, 3218.7000000, 500.7999900, 0.0000000, 0.0000000, 269.4950000 }, //Object number 26
				{ 7561, 4409.2002000, 3218.2000000, 500.7999900, 0.0000000, 0.0000000, 269.4950000 }, //Object number 27
				{ 7561, 4405.1001000, 3180.8000000, 500.7999900, 0.0000000, 0.0000000, 179.4950000 }, //Object number 28
				{ 7561, 4404.6001000, 3125.8000000, 500.7999900, 0.0000000, 0.0000000, 179.4890000 }, //Object number 29
				{ 7561, 4404.1001000, 3070.8999000, 500.7999900, 0.0000000, 0.0000000, 179.4890000 }, //Object number 30
				{ 7561, 4403.5000000, 3015.8999000, 500.7999900, 0.0000000, 0.0000000, 179.4890000 }, //Object number 31
				{ 7561, 4403.1001000, 2961.0000000, 500.7999900, 0.0000000, 0.0000000, 179.4890000 }, //Object number 32
				{ 7561, 4366.2002000, 2949.3999000, 500.7999900, 0.0000000, 0.0000000, 89.9890000 }, //Object number 33
				{ 7561, 4311.2998000, 2949.3999000, 500.7999900, 0.0000000, 0.0000000, 89.9890000 }, //Object number 34
				{ 7561, 4256.3999000, 2949.5000000, 500.7999900, 0.0000000, 0.0000000, 89.9890000 }, //Object number 35
				{ 8335, 4302.7002000, 3192.1001000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 36
				{ 8335, 4320.0000000, 3192.2000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 37
				{ 8335, 4334.8999000, 3192.3000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 38
				{ 8335, 4349.2998000, 3182.3999000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 39
				{ 8335, 4371.0000000, 3182.3999000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 40
				{ 8335, 4393.7998000, 3182.5000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 41
				{ 8335, 4371.0000000, 3162.6001000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 42
				{ 8335, 4370.8999000, 3142.6001000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 43
				{ 8335, 4356.0000000, 3123.0000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 44
				{ 8335, 4356.0000000, 3103.2000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 45
				{ 8335, 4356.1001000, 3075.6001000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 46
				{ 8335, 4356.1001000, 3055.7000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 47
				{ 8335, 4356.2002000, 3035.8000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 48
				{ 8335, 4373.6001000, 3038.3000000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 49
				{ 8335, 4339.2002000, 3100.7000000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 50
				{ 8335, 4393.4004000, 3038.2998000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 51
				{ 8335, 4330.6001000, 3072.3999000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 52
				{ 8335, 4323.2002000, 3132.8000000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 53
				{ 8335, 4345.2998000, 3157.8000000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 54
				{ 8335, 4302.8999000, 3165.6001000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 55
				{ 8335, 4295.1001000, 3110.8999000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 56
				{ 8335, 4386.8999000, 3000.2000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 57
				{ 8335, 4371.8999000, 3000.3000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 58
				{ 8335, 4357.1001000, 3000.3000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 59
				{ 8335, 4311.0000000, 3077.8999000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 60
				{ 8335, 4291.2002000, 3077.8999000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 61
				{ 8335, 4320.8999000, 3063.1001000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 62
				{ 8335, 4310.8999000, 3048.3000000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 63
				{ 8335, 4281.6001000, 3034.7000000, 498.7999900, 0.0000000, 0.0000000, 90.0000000 }, //Object number 64
				{ 8335, 4357.0000000, 2968.8999000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 65
				{ 8335, 4387.2002000, 2968.1001000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 66
				{ 8335, 4342.1001000, 2968.8000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 67
				{ 8335, 4327.2002000, 2988.7000000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 68
				{ 8335, 4312.7002000, 3008.3999000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 69
				{ 8335, 4292.5000000, 2981.1001000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 70
				{ 8335, 4378.8999000, 3105.3999000, 498.7999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 71
				{ 3633, 4370.8999000, 3114.8999000, 495.2999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 72
				{ 3633, 4369.0000000, 3114.8999000, 495.2999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 73
				{ 3633, 4367.3999000, 3114.8999000, 495.2999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 74
				{ 3633, 4364.2998000, 3114.8000000, 495.2999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 75
				{ 3633, 4365.7002000, 3114.7998000, 495.2999900, 0.0000000, 0.0000000, 0.0000000 }, //Object number 76
				{ 1225, 4380.6460000, 3131.9929000, 495.1691000, 0.0000000, 0.0000000, 0.0000000 }, //Object number 77
				{ 1225, 4376.0000000, 3122.7000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 78
				{ 1225, 4368.3999000, 3118.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 79
				{ 1225, 4388.2002000, 3114.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 80
				{ 1225, 4389.1001000, 3096.2000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 81
				{ 1225, 4392.4004000, 3106.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 82
				{ 1225, 4386.2998000, 3165.3000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 83
				{ 1225, 4371.2002000, 3204.8000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 84
				{ 1225, 4382.6006000, 3201.2002000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 85
				{ 1225, 4360.0000000, 3192.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 86
				{ 1225, 4335.7002000, 3167.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 87
				{ 1225, 4350.6006000, 3205.2998000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 88
				{ 1225, 4322.3999000, 3162.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 89
				{ 1225, 4307.6001000, 3146.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 90
				{ 1225, 4327.5000000, 3147.7998000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 91
				{ 1225, 4298.8999000, 3136.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 92
				{ 1225, 4297.7998000, 3136.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 93
				{ 1225, 4296.3999000, 3136.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 94
				{ 1225, 4295.2002000, 3138.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 95
				{ 1225, 4294.5000000, 3135.5000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 96
				{ 1225, 4297.2002000, 3137.6006000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 97
				{ 1225, 4299.0000000, 3139.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 98
				{ 1225, 4296.8999000, 3140.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 99
				{ 1225, 4294.5000000, 3139.7000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 100
				{ 1225, 4282.1001000, 3122.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 101
				{ 1225, 4276.8999000, 3168.7000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 102
				{ 1225, 4284.0000000, 3172.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 103
				{ 1225, 4321.8999000, 3101.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 104
				{ 1225, 4314.9004000, 3111.7998000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 105
				{ 1225, 4296.3999000, 3092.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 106
				{ 1225, 4330.3999000, 3113.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 107
				{ 1225, 4324.5000000, 3085.1006000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 108
				{ 1225, 4342.2002000, 3077.0000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 109
				{ 1225, 4344.0000000, 3130.7998000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 110
				{ 1225, 4329.1001000, 3045.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 111
				{ 1225, 4339.0000000, 3039.7000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 112
				{ 1225, 4328.7998000, 3020.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 113
				{ 1225, 4343.7998000, 3022.2000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 114
				{ 1225, 4339.7002000, 2995.3000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 115
				{ 1225, 4371.7998000, 3014.7000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 116
				{ 1225, 4320.7002000, 3033.3999000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 117
				{ 1225, 4310.2002000, 3027.7002000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 118
				{ 1225, 4294.7002000, 3000.5000000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 119
				{ 1225, 4313.7998000, 2983.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 }, //Object number 120
				{ 1225, 4275.2002000, 3013.1001000, 495.2000100, 0.0000000, 0.0000000, 0.0000000 } //Object number 121
			})
		{}

		bool OnGameModeInit() override
		{
			MakeAllDynamicObjects(ArenaObjects, CurrentGameVW);
			return true;
		}

		void Timer(int timerid, ZabawyTimerVector& vector)
		{
			int playerid = TimerDataGet<int>(vector, 0);
			if (Player[playerid].CurrentGameID == this)
			{
				CreatePlayerVehicleSafe(playerid, 432, 0.0, 0.0, 0.0);
				fixTogglePlayerControllable(playerid, true);
			}
		}

		void PutPlayerIntoGame(int playerid)
		{
			fixSetPlayerHealth(playerid, 100);
			fixSetPlayerArmour(playerid, 100);
			fixTogglePlayerControllable(playerid, false);

			auto i = ArenaSpawns[Functions::RandomGenerator->Random(0, ArenaSpawns.size() - 1)];
			TeleportPlayer(playerid, i.x, i.y, i.z, i.a, false, 0, CurrentGameVW, "", 0, 0, 0.0, 0.0, true);

			CreateTimer<Arena>(333, false, &Arena::Timer, playerid);
		}

		bool OnKeepInGameSpawn(int playerid) override
		{ 
			PutPlayerIntoGame(playerid);
			return true; 
		}

		bool OnGameCommandExecute(int playerid, std::string params) override
		{
			AddPlayer(playerid, true, 0xFFFFFF00);
			PutPlayerIntoGame(playerid);
			return true;
		}

		bool OnPlayerDeath(int playerid, int killerid, int reason) override
		{
			//compensate for loss
			if (killerid == INVALID_PLAYER_ID)
			{
				Player[playerid].GiveScore(1);
				--Player[playerid].statistics.deaths;
				--Player[playerid].statistics.suicides;
			}
			return true;
		}

		bool PlayerRequestGameExit(int playerid, int reason) override
		{
			switch (reason)
			{
			case PlayerRequestExitTypeDisconnect:
				PlayerExitGame(playerid);
				break;
			case PlayerRequestExitTypeExit:
				PlayerExitGame(playerid);
				break;
			}
			return true;
		}
	} _Arena;
};