/*
	Copyright (c) 2014 - 2015 Rafa³ "Gamer_Z" Grasman
		* See LICENSE.md in root directory for license
		* Written by Rafa³ Grasman <grasmanek94@gmail.com>
		* Development Start Month-Year: October-2014

	________________________________________________________________
	Purpose of this file

	________________________________________________________________	
	Notes

	________________________________________________________________
	Dependencies

	________________________________________________________________
	Project Contributors
		Tom 'IceCube' Hewlett
		Mariusz 'C2A1' K.
		Mateusz 'eider' Cichoñ
*/
#include "GameMode.hxx"

using namespace Zabawy;
namespace RPG
{
	class Arena : public Base
	{
	public:
		std::vector<SObject> ArenaObjects;

		std::vector<SSpawnPoint> ArenaSpawns;

		Arena() :
			Base(L_games_ArenaRPG_name, "/rpg"),
			ArenaSpawns({
				{ 2653.8142, 2661.2358, 53.8781+0.3, 358.7700 }, // rpg
				{ 2684.0793, 2653.0244, 45.1782+0.3, 37.3104 }, // rpg
				{ 2688.7634, 2702.5737, 28.1563+0.3, 50.7605 }, // rpg
				{ 2615.5762, 2697.6838, 32.1160+0.3, 66.7406 }, // rpg
				{ 2615.1392, 2724.2598, 41.6719+0.3, 358.7466 }, // rpg
				{ 2616.2715, 2770.9873, 23.8222+0.3, 358.7466 }, // rpg
				{ 2636.7766, 2815.9419, 38.3222+0.3, 168.8649 }, // rpg
				{ 2563.0708, 2811.9524, 37.8234+0.3, 216.1787 }, // rpg
				{ 2521.3918, 2738.5193, 10.8130+0.3, 330.3781 }, // rpg
				{ 2557.5964, 2783.9695, 10.8203+0.3, 321.4597 }, // rpg
				{ 2504.1284, 2843.1899, 10.8203+0.3, 266.6492 }, // rpg
				{ 2582.0930, 2825.4348, 10.8203+0.3, 266.6492 }, // rpg
				{ 2568.8660, 2832.4175, 19.9922+0.3, 64.2574 }, // rpg
				{ 2608.6006, 2800.6482, 10.8203+0.3, 264.1425 }, // rpg
				{ 2663.0471, 2781.5481, 10.8203+0.3, 81.1541 }, // rpg
				{ 0.0f, 0.0f, 0.0f, 0.0f}
			}),
			ArenaObjects({
				{ 3258, 2580.5144000, 2660.6230500, 30.4870800, 90.2410000, 0.0000000, 89.3810000 }, //object(refthinchim1) (1)
				{ 3258, 2583.8283700, 2663.9848600, 30.5032700, 90.2410000, 0.0000000, 89.3810000 }, //object(refthinchim1) (2)
				{ 3258, 2622.7463400, 2658.2648900, 30.6730500, 90.2410000, 0.0000000, 89.3810000 }, //object(refthinchim1) (3)
				{ 3258, 2625.9172400, 2661.5815400, 30.6938300, 90.2410000, 0.0000000, 89.3810000 }, //object(refthinchim1) (4)
				{ 3361, 2687.2094700, 2805.2578100, 33.0961400, 0.0000000, 0.0000000, 180.4820000 }, //object(cxref_woodstair) (1)
				{ 1689, 2597.9733900, 2807.8945300, 27.6812000, 0.0000000, 0.0000000, 90.2410000 }, //object(gen_roofbit3) (1)
				{ 1687, 2607.1464800, 2801.5305200, 22.9832700, 0.0000000, 0.0000000, 90.2410000 }, //object(gen_roofbit1) (1)
				{ 3399, 2655.1462400, 2829.2617200, 28.1662600, 0.0000000, 0.0000000, 0.0000000 }, //object(cxrf_a51_stairs) (1)
				{ 3399, 2666.8515600, 2829.2541500, 32.8412700, 0.0000000, 0.0000000, 0.0000000 }, //object(cxrf_a51_stairs) (2)
				{ 3399, 2643.5366200, 2829.2529300, 23.4662700, 0.0000000, 0.0000000, 0.0000000 }, //object(cxrf_a51_stairs) (3)
				{ 16322, 2659.6035200, 2739.6496600, 17.6259700, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_plat) (1)
				{ 1687, 2617.0368700, 2824.8073700, 23.0332700, 0.0000000, 0.0000000, 0.0000000 }, //object(gen_roofbit1) (2)
				{ 2669, 2559.7417000, 2827.3574200, 28.1105900, 0.0000000, 0.0000000, 0.0000000 }, //object(cj_chris_crate) (1)
				{ 5822, 2617.4519000, 2701.9480000, 30.3467700, 0.0000000, 0.0000000, 94.5380000 }, //object(lhroofst14) (1)
				{ 2649, 2647.0927700, 2726.8713400, 19.9796800, 0.0000000, 269.8630000, -179.6220000 }, //object(cj_aircon2) (1)
				{ 3470, 2639.4497100, 2724.4550800, 24.2531300, 0.0000000, 0.0000000, 0.0000000 }, //object(vegasaircon1) (1)
				{ 3361, 2568.5388200, 2689.9294400, 26.2746000, 0.0000000, 0.0000000, 91.9600000 }, //object(cxref_woodstair) (2)
				{ 3361, 2568.8076200, 2681.7260700, 30.2378400, 0.0000000, 0.0000000, 91.9600000 }, //object(cxref_woodstair) (3)
				{ 16644, 2569.3762200, 2677.4946300, 24.3235800, 0.0000000, 0.0000000, -87.6630000 }, //object(a51_ventsouth) (1)
				{ 5822, 2583.6049800, 2724.5957000, 16.6198700, 0.0000000, 0.0000000, -85.9440000 }, //object(lhroofst14) (2)
				{ 3361, 2568.2565900, 2698.0815400, 22.2995700, 0.0000000, 0.0000000, 91.9600000 }, //object(cxref_woodstair) (4)
				{ 3761, 2600.8923300, 2849.2316900, 11.1192900, 0.0000000, 0.0000000, 89.3810000 }, //object(industshelves) (1)
				{ 3675, 2614.3610800, 2846.1506400, 15.1265000, 0.0000000, 0.0000000, -89.3810000 }, //object(laxrf_refinerypipe) (1)
				{ 958, 2615.5761700, 2845.2932100, 18.1026400, 90.2410000, 0.0000000, -90.2410000 }, //object(cj_chip_maker) (1)
				{ 16082, 2722.0825200, 2840.9314000, 15.4928200, 0.0000000, 0.0000000, -178.7630000 }, //object(des_quarryplatform) (1)
				{ 3474, 2673.4707000, 2704.4685100, 16.7402800, 0.0000000, 0.0000000, 0.0000000 }, //object(freightcrane1) (1)
				{ 1687, 2684.5175800, 2697.5771500, 22.7586100, 0.0000000, 0.0000000, 0.0000000 }, //object(gen_roofbit1) (3)
				{ 1687, 2683.4470200, 2712.4606900, 22.7586100, 0.0000000, 0.0000000, 90.2410000 }, //object(gen_roofbit1) (4)
				{ 13011, 2704.8464400, 2714.4401900, 18.7554900, 0.0000000, 0.0000000, 179.6220000 }, //object(cos_sbanksteps04) (1)
				{ 13011, 2700.1501500, 2716.3315400, 13.8389500, 0.0000000, 0.0000000, 269.9400000 }, //object(cos_sbanksteps04) (2)
				{ 16322, 2694.4367700, 2716.4790000, 12.9528800, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_plat) (2)
				{ 16082, 2702.9211400, 2757.1840800, 14.4428200, 0.0000000, 0.0000000, 179.6220000 }, //object(des_quarryplatform) (2)
				{ 3575, 2718.8098100, 2733.1181600, 12.5120000, 0.0000000, 0.0000000, 0.0000000 }, //object(lasdkrt05) (1)
				{ 3574, 2733.1460000, 2813.0466300, 12.5120000, 0.0000000, 0.0000000, 0.0000000 }, //object(lasdkrtgrp2) (1)
				{ 8885, 2633.5524900, 2680.3974600, 13.2480900, 0.0000000, 0.0000000, 90.2410000 }, //object(vgsefrght03) (1)
				{ 8885, 2531.7480000, 2698.7012000, 13.2480900, 0.0000000, 0.0000000, 269.8630000 }, //object(vgsefrght03) (2)
				{ 3572, 2621.7385300, 2837.5520000, 11.1682500, 0.0000000, 0.0000000, 90.2410000 }, //object(lasdkrt4) (1)
				{ 3258, 2594.6481900, 2711.7302300, 23.3168800, 0.8590000, -110.0080000, 0.0000000 }, //object(refthinchim1) (5)
				{ 16766, 2727.2553700, 2728.3649900, -5.1301800, 0.0000000, 24.0640000, 45.5500000 }, //object(des_oilpipe_02) (1)
				{ 16766, 2728.1904300, 2727.6606500, -5.2702500, 0.0000000, 24.0640000, 45.5500000 }, //object(des_oilpipe_02) (2)
				{ 1689, 2640.4834000, 2813.9829100, 38.5331000, 0.0000000, 0.0000000, 0.0000000 }, //object(gen_roofbit3) (2)
				{ 1428, 2592.9677700, 2802.8317900, 16.2881700, -7.7350000, 0.0000000, -90.2410000 }, //object(dyn_ladder) (1)
				{ 1428, 2591.8151900, 2802.8398400, 13.7381700, -7.7350000, 0.0000000, -90.2410000 }, //object(dyn_ladder) (2)
				{ 1428, 2590.7119100, 2802.8544900, 11.2881700, -7.7350000, 0.0000000, -90.2410000 }, //object(dyn_ladder) (3)
				{ 5130, 2491.4265100, 2739.3667000, 12.2069000, 0.0000000, 0.0000000, 134.9320000 }, //object(imcompstrs02) (1)
				{ 7947, 2560.1667500, 2614.0686000, -59.6106600, 103.1320000, 0.0000000, -51.5660000 }, //object(vegaspumphouse1) (1)
				{ 1688, 2585.5322300, 2719.9404300, 12.8476900, 0.0000000, 0.0000000, -90.2410000 }, //object(gen_roofbit2) (1)
				{ 12985, 2652.7055700, 2694.6533200, 15.6999400, 0.0000000, 0.0000000, 90.4990000 }, //object(cos_sbanksteps05) (1)
				{ 12950, 2643.4113800, 2694.7251000, 8.7340400, 0.0000000, 0.0000000, -89.9830000 }, //object(cos_sbanksteps03) (1)
				{ 3675, 2617.0212400, 2804.7180200, 27.3534400, 269.5620000, 94.5380000, 183.9200000 }, //object(laxrf_refinerypipe) (2)
				{ 3643, 2629.2380400, 2804.7138700, 24.9436300, 90.2410000, 0.0000000, -89.9830000 }, //object(la_chem_piping) (1)
				{ 3470, 2594.2832000, 2802.7678200, 13.8262300, 0.0000000, 0.0000000, -180.0090000 }, //object(vegasaircon1) (2)
				{ 3675, 2595.3352100, 2783.6062000, 18.5234500, 0.0000000, 0.0000000, 177.0440000 }, //object(laxrf_refinerypipe) (3)
				{ 4206, 2523.2000000, 2781.1001000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(pershingpool_lan) (1)
				{ 4206, 2560.0000000, 2779.8000000, 9.9000000, 0.0000000, 0.0000000, 0.0000000 }, //object(pershingpool_lan) (2)
				{ 1218, 2552.6001000, 2767.6001000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (1)
				{ 1218, 2538.7002000, 2778.7998000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (2)
				{ 1218, 2550.9004000, 2792.5000000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (3)
				{ 1218, 2570.1001000, 2755.1001000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (4)
				{ 1218, 2536.2000000, 2753.8000000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (5)
				{ 1218, 2559.6006000, 2751.7002000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (6)
				{ 1218, 2564.4004000, 2730.2002000, 10.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(barrel1) (7)
				{ 7073, 2557.2000000, 2835.2000000, 45.1000000, 0.0000000, 0.0000000, 246.0000000 }, //object(vegascowboy1) (1)
				{ 7073, 2488.2000000, 2789.3999000, 28.1000000, 0.0000000, 0.0000000, 327.9950000 }, //object(vegascowboy1) (2)
				{ 7392, 2566.3999000, 2664.3000000, 44.5000000, 0.0000000, 0.0000000, 306.0000000 }, //object(vegcandysign1) (1)
				{ 3406, 2527.8000000, 2714.7000000, 15.9000000, 0.0000000, 0.0000000, 0.0000000 }, //object(cxref_woodjetty) (1)
				{ 3406, 2519.2000000, 2714.7000000, 15.9000000, 0.0000000, 0.0000000, 0.0000000 }, //object(cxref_woodjetty) (2)
				{ 3406, 2510.6001000, 2714.7000000, 15.9000000, 0.0000000, 0.0000000, 0.0000000 }, //object(cxref_woodjetty) (3)
				{ 3406, 2536.3999000, 2714.7000000, 15.9000000, 0.0000000, 0.0000000, 0.0000000 }, //object(cxref_woodjetty) (4)
				{ 3279, 2612.5000000, 2661.2000000, 37.0000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (1)
				{ 3279, 2654.0000000, 2661.7000000, 36.8000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (2)
				{ 3279, 2684.1001000, 2652.3000000, 36.5000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (4)
				{ 3279, 2565.7000000, 2814.5000000, 26.8000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (5)
				{ 3279, 2650.5000000, 2812.3000000, 35.3000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (6)
				{ 3279, 2617.8999000, 2720.8999000, 35.5000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (7)
				{ 3279, 2545.7000000, 2733.5000000, 9.8000000, 0.0000000, 0.0000000, 0.0000000 }, //object(a51_spottower) (8)
				{ 3279, 2543.0000000, 2788.8999000, 9.8000000, 0.0000000, 0.0000000, 0.0000000 } //object(a51_spottower) (9)
			})
		{}

		bool OnGameModeInit() override
		{
			MakeAllDynamicObjects(ArenaObjects, CurrentGameVW);
			return true;
		}

		void Timer(int timerid, ZabawyTimerVector& vector)
		{
			int playerid = TimerDataGet<int>(vector, 0);
			if (Player[playerid].CurrentGameID == this)
			{
				safeGivePlayerWeapon(playerid, 35, 999999);

				fixSetPlayerHealth(playerid, 100);
				fixSetPlayerArmour(playerid, 100);
				fixTogglePlayerControllable(playerid, true);
			}
		}

		void PutPlayerIntoGame(int playerid)
		{
			fixSetPlayerHealth(playerid, 100000);
			fixSetPlayerArmour(playerid, 100000);
			fixTogglePlayerControllable(playerid, false);

			auto i = ArenaSpawns[Functions::RandomGenerator->Random(0, ArenaSpawns.size() - 1)];
			TeleportPlayer(playerid, i.x, i.y, i.z, i.a, false, 0, CurrentGameVW, "", 0, 0, 0.0, 0.0, true);

			CreateTimer<Arena>(333, false, &Arena::Timer, playerid);
		}

		bool OnKeepInGameSpawn(int playerid) override
		{
			PutPlayerIntoGame(playerid);
			return true;
		}

		bool OnGameCommandExecute(int playerid, std::string params) override
		{
			AddPlayer(playerid, true, 0xFFFFFF00);
			PutPlayerIntoGame(playerid);
			return true;
		}

		bool OnPlayerDeath(int playerid, int killerid, int reason) override
		{
			GivePlayerAchievement(playerid, EAM_ZabawyRPGDeaths, 1);
			if (killerid != INVALID_PLAYER_ID)
			{
				GivePlayerAchievement(killerid, EAM_ZabawyRPGKills, 1);
			}
			return true;
		}

		bool PlayerRequestGameExit(int playerid, int reason) override
		{
			switch (reason)
			{
			case PlayerRequestExitTypeDisconnect:
				PlayerExitGame(playerid);
				break;
			case PlayerRequestExitTypeExit:
				PlayerExitGame(playerid);
				break;
			}
			return true;
		}
	} _Arena;
};